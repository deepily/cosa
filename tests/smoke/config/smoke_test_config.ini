# CoSA Framework Smoke Test Suite Configuration
#
# This configuration file controls the behavior of the CoSA smoke test suite
# including timeouts, test categories, baseline settings, and output preferences.

[test_execution]
# Default timeout for individual smoke tests (seconds)
default_timeout = 120

# Maximum timeout for slow tests (seconds)
max_timeout = 300

# Number of retries for failed tests
retry_count = 0

# Whether to continue testing after failures
continue_on_failure = true

# Quick mode test limits (max tests per category)
quick_mode_limit = 5

[test_categories]
# Enable/disable specific test categories
core_tests = true
agent_tests = true
rest_tests = true
memory_tests = true
training_tests = true
integration_tests = true

# Category-specific timeouts (override default_timeout)
core_timeout = 60
agent_timeout = 120
rest_timeout = 90
memory_timeout = 120
training_timeout = 180
integration_timeout = 240

[baseline_management]
# Default baseline name for v000 deprecation
default_baseline_name = v000_deprecation

# Automatically save baselines with timestamps
auto_timestamp_baselines = true

# Keep this many historical baselines
max_historical_baselines = 10

# Baseline comparison tolerance (percentage)
regression_threshold = 5.0

# Success rate threshold for "acceptable" results
acceptable_success_rate = 80.0

[output_formatting]
# Enable colored console output
use_colors = true

# Banner width for formatted output
banner_width = 60

# Show detailed timing information
show_timing_details = true

# Include test output in results (debug mode)
capture_test_output = false

# Print progress during test execution
show_progress = true

[v000_dependency_tracking]
# Enable v000 dependency scanning
enable_dependency_scanning = true

# Scan for these v000 patterns
v000_import_patterns = ["from cosa.agents.v000", "import cosa.agents.v000", "cosa.agents.v000."]

# Additional patterns to scan for legacy code
legacy_patterns = ["v000", "legacy", "deprecated"]

# Report dependency progress in baseline comparisons
track_dependency_progress = true

[error_handling]
# How to handle import errors for missing modules
missing_module_action = warn

# How to handle modules without smoke tests
no_smoke_test_action = warn

# Whether to show full stack traces for failures
show_full_tracebacks = false

# Maximum error message length in reports
max_error_message_length = 200

[performance_monitoring]
# Enable performance baseline tracking
track_performance_baselines = true

# Performance regression threshold (percentage increase)
performance_regression_threshold = 20.0

# Track memory usage during tests
monitor_memory_usage = false

# Track CPU usage during tests
monitor_cpu_usage = false

[logging]
# Log level for test execution (DEBUG, INFO, WARNING, ERROR)
log_level = INFO

# Enable debug logging for test discovery
debug_discovery = false

# Enable debug logging for test execution
debug_execution = false

# Enable debug logging for baseline operations
debug_baselines = false

# Log file path (empty = no file logging)
log_file_path = 

[integration]
# Notification script path for test completion alerts
notification_script = 

# Send notifications on test completion
notify_on_completion = false

# Send notifications on test failures
notify_on_failure = false

# Send notifications on regressions
notify_on_regression = true

# Notification email (if notification script supports it)
notification_email = 

[development]
# Enable development mode features
development_mode = false

# Skip tests that require external dependencies
skip_external_dependencies = false

# Mock external services for testing
mock_external_services = false

# Override PYTHONPATH for testing
override_pythonpath = 

# Additional module search paths
additional_module_paths = 

[reporting]
# Generate HTML reports
generate_html_reports = false

# HTML report output directory
html_report_dir = ./reports

# Generate JSON reports
generate_json_reports = true

# JSON report output directory  
json_report_dir = ./reports

# Include test details in reports
include_test_details = true

# Include baseline comparisons in reports
include_baseline_comparisons = true

[categories.core]
# Core framework modules to test
modules = [
    "config.configuration_manager",
    "utils.util", 
    "utils.util_code_runner",
    "utils.util_stopwatch",
    "cli.notify_user"
]

[categories.agents]
# v010 agent modules to test
modules = [
    "agents.v010.math_agent",
    "agents.v010.calendaring_agent", 
    "agents.v010.weather_agent",
    "agents.v010.todo_list_agent",
    "agents.v010.receptionist_agent",
    "agents.v010.bug_injector",
    "agents.v010.confirmation_dialog",
    "agents.v010.date_and_time_agent",
    "agents.v010.gister", 
    "agents.v010.iterative_debugging_agent",
    "agents.v010.llm_client",
    "agents.v010.llm_client_factory",
    "agents.v010.llm_completion",
    "agents.v010.prompt_formatter", 
    "agents.v010.raw_output_formatter",
    "agents.v010.runnable_code",
    "agents.v010.token_counter",
    "agents.v010.two_word_id_generator"
]

[categories.rest]
# REST service modules to test
modules = [
    "rest.user_id_generator",
    "rest.multimodal_munger",
    "rest.notification_fifo_queue", 
    "rest.queue_consumer",
    "rest.todo_fifo_queue"
]

[categories.memory]
# Memory system modules to test
modules = [
    "memory.embedding_cache_table",
    "memory.embedding_manager",
    "memory.gist_normalizer",
    "memory.input_and_output_table",
    "memory.normalizer", 
    "memory.solution_snapshot",
    "memory.solution_snapshot_mgr"
]

[categories.training]
# Training system modules to test
modules = [
    "training.hf_downloader",
    "training.peft_trainer", 
    "training.quantizer",
    "training.xml_coordinator",
    "training.xml_prompt_generator",
    "training.xml_response_validator"
]

[quick_mode]
# Modules to test in quick mode (subset of each category)
core_quick = [
    "config.configuration_manager",
    "utils.util"
]

agents_quick = [
    "agents.v010.math_agent",
    "agents.v010.llm_client",
    "agents.v010.raw_output_formatter"
]

rest_quick = [
    "rest.user_id_generator",
    "rest.queue_consumer" 
]

memory_quick = [
    "memory.solution_snapshot"
]

training_quick = [
    "training.xml_coordinator"
]